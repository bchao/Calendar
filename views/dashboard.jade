extends layout

block content
  div(ng-app="calendarApp")

    link(rel='stylesheet', href='/css/angular-bootstrap-calendar.min.css')
    link(rel='stylesheet', href='/css/angular-csp.css')

    .page-header
      .row
        .col-md-8
          h1.text-center
            {{ calendarControl.getTitle() }}
      .row
        .col-md-8
          .pull-left.form-inline
           .btn-group
              button.btn.btn-primary(ng-click="nav('back')") << Prev
              button.btn(ng-click="goToToday()") Today
              button.btn.btn-primary(ng-click="nav('forward')") Next >>
          .pull-right.form-inline
            .btn-group#viewLengthButtons
              button.btn.btn-primary(ng-class="{active: calendarView=='year'}", ng-click="setViewLength('year')") Year
              button.btn.btn-primary(ng-class="{active: calendarView=='month'}", ng-click="setViewLength('month')") Month
              button.btn.btn-primary(ng-class="{active: calendarView=='week'}", ng-click="setViewLength('week')") Week
              button.btn.btn-primary(ng-class="{active: calendarView=='day'}", ng-click="setViewLength('day')") Day
      br
    .row
      .col-md-8
        mwl-calendar(calendar-events='events', calendar-view='calendarView', calendar-current-day='calendarDay', calendar-control='calendarControl', calendar-event-click='displayEventDetails($event)', calendar-edit-event-click='eventEdited($event)', calendar-delete-event-click='eventDeleted($event)', calendar-auto-open='true')
      .col-md-4
        #sideBar(ng-controller="sideBarController")
          .btn-group
            button.btn.btn-primary(ng-class="{active: selector == 0 || selector == 1}", ng-click="displayUserGroups()") Groups
            button.btn.btn-primary(ng-class="{active: selector == 2 || selector == 3 || selector == 5}", ng-click="displayCalendars()") Calendars
            button.btn.btn-primary(ng-class="{active: selector == 4}", ng-click="displayEvents()") Events
            button.btn.btn-primary(ng-class="{active: selector == 6}", ng-click="displayInvites()") Invites
          #userGroupWindow(ng-show="selector == 0")
            br
            ul(style='list-style-type: none; padding-left: 10px;')
              li(ng-repeat="group in userGroups")
                a(href, ng-click="displayUserGroup(group)") {{ group.name + " " }}
                a(href, ng-click="deleteUserGroup(group._id)")
                  span(class="glyphicon glyphicon-remove")
            form(name="createGroupForm")
              input(type="text", ng-model="inputUserGroup", placeholder="New User Group", required)
              &nbsp;
              button.btn.btn-primary(ng-disabled="createGroupForm.$invalid", ng-click="createGroup()") Create Group
          #userListWindow(ng-show="selector == 1")
            h4 {{ selectedUserGroup.name }}
            ul(style='list-style-type: none; padding-left: 10px;')
              li(ng-repeat="user in selectedUserGroup.users")
                {{ user.email + " " }}
                a(href, ng-click="deleteUserFromGroup(user.email)")
                  span(class="glyphicon glyphicon-remove")
             form(name="addUserForm")
              input(type="text", ng-model="inputUserEmail", placeholder="User Email", list="emails", required)
              &nbsp;
              button.btn.btn-primary(ng-disabled="addUserForm.$invalid", ng-click="addUserToGroup()", ) Add User
              br
              {{ text }}

          #calendarInfo(ng-show="selector == 2")
            h4 My Calendars
            ul(style='list-style-type: none; padding-left: 10px;')
              li(ng-repeat="calendar in myCalendars")
                a(href, ng-click="displayOwnerCalendar(calendar)") {{ calendar.name + " " }}
                a(href, ng-click="deleteCalendar(calendar._id)")
                  span(class="glyphicon glyphicon-remove")
            h4 Shared Calendars
            h5 Modify
            ul(style='list-style-type: none; padding-left: 10px;')
              li(ng-repeat="calendar in modCalendars")
                a(href, ng-click="displayCalendar(calendar)") {{ calendar.name }}
            h5 See All
            ul(style='list-style-type: none; padding-left: 10px;')
              li(ng-repeat="calendar in viewCalendars")
                a(href, ng-click="displayCalendar(calendar)") {{ calendar.name }}
            h5 Busy Only
            ul(style='list-style-type: none; padding-left: 10px;')
              li(ng-repeat="calendar in viewBusyCalendars")
                a(href, ng-click="displayCalendar(calendar)") {{ calendar.name }}
            form(name="createCalendarForm")
              input(type="text", ng-model="inputCalendarName", placeholder="Calendar Name", required)
              &nbsp;
              button.btn.btn-primary(ng-disabled="createCalendarForm.$invalid", ng-click="createCalendar(inputCalendarName)") Create Calendar


          #calendarDetailsWindow(ng-show="selector == 3")
            h3 {{ selectedCalendar.name }}
            b Owner: 
            | {{ selectedCalendar.owner.name }}
            br
            b Events: 
            ul(style='list-style-type: none; padding-left: 10px;')
              li(ng-repeat="event in localEvents | filter: selectedCalendar._id")
                a(href ng-click="displayEventDetails(event)") {{ event.title }}

          #calendarOwnerDetailsWindow(ng-show="selector == 5")
            h3 {{ selectedCalendar.name }}
            b Owner 
            | {{ selectedCalendar.owner.name }}
            br
            b Events 
            ul(style='list-style-type: none; padding-left: 10px;')
              li(ng-repeat="event in localEvents | filter: selectedCalendar._id")
                a(href ng-click="displayEventDetails(event)") {{ event.title }}
            b Rules 
            ul(style='list-style-type: none; padding-left: 10px;')
              li(ng-repeat="rule in selectedCalendar.rules")
                {{ rule.ruleType + " " }}
                a(href, ng-click="deleteRule(rule._id)")
                  span(class="glyphicon glyphicon-remove")
                | Groups 
                ul(style='list-style-type: none; padding-left: 10px;')
                  li(ng-repeat="groupId in rule.assocUserGroups")
                    {{ groupId }}
                | Users 
                ul(style='list-style-type: none; padding-left: 10px;')
                  li(ng-repeat="userId in rule.assocUsers")
                    {{ getUserEmail(userId) }}
            b Users with Modify 
            ul(style='list-style-type: none; padding-left: 10px;')
              li(ng-repeat="modUser in selectedCalendar.modList")
                {{ getUserEmail(modUser) + " " }}
                a(href, ng-click="removeModUser(modUser._id)")
                  span(class="glyphicon glyphicon-remove")
            br
            form(name="addRuleForm")
              label Rule Type
              br
              select(ng-model="newRule.ruleType")
                option(value="canView") Can View
                option(value="canViewBusy") Can View Busy
                option(value="canNotView") Cannot View
              br
              label User Group
              br
              select(ng-model="userGroup", ng-options="group.name for group in userGroups")
              &nbsp;
              button.btn(ng-click="addUserGroupToRule()") Add User Group
              ul(style='list-style-type: none; padding-left: 10px;')
                li(ng-repeat="displayGroup in userGroupDisplay") {{ displayGroup }}
              label User Email
              br
              input(type="text", ng-model="userEmail", list="emails")
              &nbsp;
              button.btn(ng-click="addUserEmailToRule()") Add User Email
              ul(style='list-style-type: none; padding-left: 10px;')
                li(ng-repeat="userEmail in newRule.userIds") {{ userEmail }}
              button.btn.btn-primary(ng-disabled="addRuleForm.$invalid", ng-click="addRule()") Add Rule
              br
            form(name="addModUserForm")
              input(type="text", ng-model="inputModUserId", list="emails")
              &nbsp;
              button.btn(ng-click="addModUsertoList()") Add User with Modify
              ul
                li(ng-repeat="modUserId in modUserList") {{ modUserId }}
              button.btn.btn-primary(ng-disabled="addModUserForm.$invalid", ng-click="addModUser()") Add Users with Modify

          #calendarEvents(ng-show="selector == 4")
            ul(style="padding-left: 0", ng-repeat="(key, value) in localEvents | groupBy: 'parentData.calendarId'")
              h4 {{ value[0].parentData.calendarName }}
              li(style="list-style-type: none; padding-left: 10px", ng-repeat="event in value")
                a(href, ng-click="displayEventDetails(event)") {{ event.title }}
            a.btn.btn-primary(href, ng-click="createNewEvent()") Create Event
          
          #eventInvites(ng-show="selector == 6")
            h4 Sent Invitations
            ul(style='list-style-type: none; padding-left: 10px;')
              li(ng-repeat="request in ownRequests")
                //request.eventID is an event object, not an ID, naming is due to database storage
                a(href, ng-click="displayEventDetails(request.eventID)") {{ request.eventID.name }}
                if('request.edits.length > 0')
                  ul
                    li(ng-repeat="editEvent in request.edits")
                      a(href, ng-click="displayEventDetails(editEvent)") {{ editEvent.editor }}
            h4 Received Invitations
            ul(style='list-style-type: none; padding-left: 10px;')
              li(ng-repeat="request in pendingRequests")
                a(href, ng-click="displayEventDetails(request.eventID)") {{ request.eventID.name + " " }}
                a(href, ng-hide="selectedRequest == request._id", ng-click="selectedRequest = request._id") [v]
                br
                form(ng-show="selectedRequest == request._id")
                  select(ng-model="requestCalendar", ng-options="calendar.name for calendar in myCalendars", required)
                  br
                  .btn-group
                    button.btn.btn-primary(ng-disabled="requestCalendar == undefined", ng-click="acceptRequest(request, requestCalendar)") Accept
                    button.btn.btn-warning(ng-click="declineRequest(request)") Decline
                    button.btn.btn-danger(ng-click="ignoreRequest(request)") Remove


    script(type="text/ng-template" id="createEventModal.html" )
      .modal-header
        button.close(type='button', ng-click="cancel()") &times;
        h4#myModalLabel.modal-title Create Event
      .modal-body
        form(name="eventForm")
          label Event Name
          br
          input(type="text", ng-model="eventDetails.name", placeholder="Event Name", required)
          br

          label Description
          br
          textarea(rows="8", cols="50", ng-model="eventDetails.description", placeholder="Description")
          br

          label Location
          br
          input(type="text", ng-model="eventDetails.location", placeholder="Location")
          br
          //
            label All Day?
            input(type="checkbox", ng-model="eventDetails.isAllDay")

          label Start Time
          br
          input(type="datetime-local", ng-model="eventDetails.start", placeholder="yyyy-MM-ddTHH:mm", min="2015-01-01T00:00" max="2050-12-31T00:00", required)
          br
          
          label End Time
          br
          input(type="datetime-local", ng-model="eventDetails.end", placeholder="yyyy-MM-ddTHH:mm", min="2015-01-01T00:00" max="2050-12-31T00:00", required)
          br

          //Currently this naively assumes the date in alertTime is valid
          label Add Alert
          br
          input(type="datetime-local", ng-model="alertTime", name="alertTimeInput", placeholder="yyyy-MM-ddTHH:mm", min="2015-01-01T00:00" max="2050-12-31T00:00")
          br
          button.btn(type="button", ng-disabled="!isValidTime(alertTime)", ng-click="addAlert()") Add Alert
          br
          ul
           li(ng-repeat="time in eventDetails.alerts") {{ time.toLocaleTimeString() + "  " }}
             a(href ng-click="removeAlert(time)")
              span(class="glyphicon glyphicon-remove")
          
          label Repeat? &nbsp;
          input(type="checkbox", ng-model="eventDetails.willRepeat")
          br
          div(ng-hide="!eventDetails.willRepeat")
            label Repeat Mode
            br
            select(ng-model="eventDetails.repeatMode", placeholder="Select an Option")
              option Number
              option End Date
            br
            div(ng-hide="eventDetails.repeatMode != 'Number'")
              label Repeat Count
              br
              input(type="text", ng-model="eventDetails.repeatCount", placeholder="Enter an Integer", ng-pattern="/[0-9]+/")
              br
            div(ng-hide="eventDetails.repeatMode != 'End Date'")
              label End Date
              br
              input(type="date", ng-model="eventDetails.repeatUntil", placeholder="yyyy-MM-dd")
              br
            div(ng-repeat="day in daysOfTheWeek")
              label {{ day.name }} &nbsp;
              input(type="checkbox", ng-model="eventDetails.weekdayRepeats[day.number]")
          label For PUD?
          br
          input(type="checkbox", ng-model="eventDetails.isPUD")
          br
          label Containing Calendar
          br
          select(ng-model="eventDetails.calendar", ng-options="calendar.name group by calendar.grouping for calendar in calendars | filter:{grouping: '!Busy Calendar'} | filter:{grouping: '!Viewable Calendar'}", required)
          br
          input(type="text", ng-model="selectedEvent._id", ng-hide="true")
          br
          btn.btn.btn-primary(ng-disabled="eventForm.$invalid", ng-click="sendEventData()", data-dismiss='modal') Save
    
    script(type="text/ng-template" id="eventDetailsModal.html" )
      .modal-header
        button.close(type='button', ng-click="cancel()") &times;
        h4#myModalLabel.modal-title(ng-hide="selectedEvent.canViewEvent") Event
        h4#myModalLabel.modal-title(ng-show="selectedEvent.canViewEvent") {{ selectedEvent.name }}
      .modal-body
        .row
          .col-md-6
            div(ng-show="selectedEvent.canViewEvent")
              p(ng-show="selectedEvent.description")
                b Description 
                | {{ selectedEvent.description }}
              p
                b When 
                | {{convertDates(selectedEvent.start, selectedEvent.end)}}
              p(ng-show="selectedEvent.location")
                b Where 
                | {{ selectedEvent.location }}
            p
              b Calendar 
              | {{ selectedEvent.calendarName }}
            div(ng-show="selectedEvent.canViewEvent")
              div(ng-hide="selectedEvent.alerts == null")
                b Alerts
                ul
                  li(ng-repeat="alert in selectedEvent.alerts") {{ alert.time.toLocaleString() + " by " + alert.method }}
              div(ng-hide="selectedEvent.willRepeat == null")
                h4 Repeats?
                p {{ selectedEvent.willRepeat }}
                  div(ng-show="selectedEvent.willRepeat")
                    p(ng-show="eventDetails.repeatMode == 'Number'") Repeats for {{ eventDetails.repeatCount }} iterations.
                    p(ng-show="eventDetails.repeatMode == 'End Date'") Repeats until {{ eventDetails.repeatUntil }}.
            h2(ng-show="selectedEvent.repeats.length > 0") Part of a series of events.
          .col-md-6
            div(ng-show="selectedRequest")
              p
                b 
                  | Invite Information
              p
                {{ selectedRequest.info }}
              p
                b
                  | User Invite Statuses
                p(ng-repeat="userId in selectedRequest.userIDs")
                  {{ getUserEmail(userId) + ": " + selectedRequest.usersStatus[userId].status }}
        .row
          hr
          .btn-group
            button.btn.btn-primary.btn-sm(ng-disabled="!selectedEvent.canEditEvent", ng-click="editSelectedEvent()") Edit Event
            button.btn.btn-danger.btn-sm(ng-disabled="!selectedEvent.canEditEvent", ng-click="deleteSelectedEvent()") Delete Event
            button.btn.btn-warning.btn-sm(ng-disabled="!selectedEvent.canEditEvent", ng-click="inviteUsers()") Invite Users
    
    script(type="text/ng-template" id="inviteUserModal.html")
      .modal-header
        button.close(type='button', ng-click="cancel()") &times;
        h4#myModalLabel.modal-title Invite Users to {{ selectedEvent.name }}
      .modal-body
        form(name="UserInvite")
          textarea(rows="2", cols="40", ng-model="requestDetails.description", placeholder="Invite Description")
          br
          select(ng-model="selectedGroup", ng-options="group.name for group in userGroups")
          br
          button.btn(ng-click="addUserGroupToRequest()") Add User Group
          ul
            li(ng-repeat="userGroup in requestDetails.userGroups") {{ userGroup.name }}
          input(type="text", ng-model="userEmail", list="emails")
          button.btn(ng-click="addUserToRequest()") Add User
          ul
            li(ng-repeat="user in requestDetails.userList") {{ user }}
        .btn-group
          button.btn.btn-primary(ng-click="sendUserInvites()") Send Invites

    script(type="text/ng-template" id="addRuleModal.html")
      .modal-header
        button.close(type='button', ng-click="cancel()") &times;
        h4#myModalLabel.modal-title Add Rule to {{ selectedCalendar.name }}
      .modal-body
        form(name="addRuleForm")
          label Rule Type
          br
          select(ng-model="newRule.ruleType")
            option(value="canView") Can View
            option(value="canViewBusy") Can View Busy
            option(value="canNotView") Cannot View
          br
          label User Group
          br
          select(ng-model="userGroupId", ng-options="group.name for group in userGroups")
          br
          button.btn(ng-click="addUserGroupToRule()") Add User Group
          ul
            li(ng-repeat="userGroupId in newRule.userGroupIds") {{ userGroupId }}
          label User Email
          br
          input(type="text", ng-model="userEmail", list="emails")
          button.btn(ng-click="addUserEmailToRule()") Add User Email
          ul
            li(ng-repeat="userEmail in newRule.userEmails") {{ userId }}
          button.btn.btn-primary(ng-disabled="addRuleForm.$invalid", ng-click="addRule()") Add Rule

    datalist(id="emails")
      option(ng-repeat="user in userList") {{ user.email }}
    script(type='text/javascript', src='/js/underscore-min.js')
    script(type='text/javascript', src='/js/angular.js')
    script(type='text/javascript', src='/js/moment.js')
    script(type='text/javascript', src='/js/angular-filter.min.js')
    script(type='text/javascript', src='/js/angular-bootstrap-calendar-tpls.min.js')
    script(type='text/javascript', src='/js/ui-bootstrap-tpls.min.js')
    script(type='text/javascript', src='/js/date.js')
    script(type='text/javascript', src='/js/index.js')
    script(type='text/javascript', src='/js/modalController.js')
    script(type='text/javascript', src='/js/sideBarController.js')
